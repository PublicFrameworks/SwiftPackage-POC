// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name PR1DigitalAdClassic
import Foundation
@_exported import PR1DigitalAdClassic
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum Environment : Swift.String {
  case QA
  case PROD
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol OfferDelegate : AnyObject {
  func didTapOffer(content: PR1DigitalAdClassic.SpotClickPayload)
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class DigitalAd : UIKit.UITableViewController {
  @_Concurrency.MainActor(unsafe) public var hostingViewController: UIKit.UIViewController?
  @_Concurrency.MainActor(unsafe) @objc dynamic public init()
  @_Concurrency.MainActor(unsafe) public init(_ parentViewController: UIKit.UIViewController, containerView: UIKit.UIView, adId: Swift.String, location: Swift.String, apiKey: Swift.String, apiEnv: PR1DigitalAdClassic.Environment)
  @objc deinit
  @_Concurrency.MainActor(unsafe) weak public var delegate: (any PR1DigitalAdClassic.OfferDelegate)?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func embedInView(_ containerView: UIKit.UIView, _ parentViewController: UIKit.UIViewController, id: Swift.String, location: Swift.String, apiKey: Swift.String, environment: PR1DigitalAdClassic.Environment)
  @_Concurrency.MainActor(unsafe) public func getVersionString() -> Swift.String
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
}
public struct PageOfferDetailsModelApiResponse : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class WeeklyAdPageCell : UIKit.UITableViewCell, UIKit.UIScrollViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func awakeFromNib()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func setSelected(_ selected: Swift.Bool, animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc public func viewForZooming(in scrollView: UIKit.UIScrollView) -> UIKit.UIView?
  @available(iOS 3.0, *)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableViewCell.CellStyle, reuseIdentifier: Swift.String?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public struct MapConfigContent : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct OfferContent : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct CreativeContent : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct SpotClickPayload : Swift.Codable {
  public let itemType: Swift.String
  public let id: Swift.String
  public let headline: Swift.String
  public let bodyCopy: Swift.String
  public let imageURL: Swift.String
  public let pricingHTML: Swift.String
  public let pricingText: Swift.String
  public let upc: Swift.String
  public let startDate: Swift.String
  public let endDate: Swift.String
  public let category: Swift.String
  public let disclaimer: Swift.String
  public let webURL: Swift.String
  public let appURL: Swift.String
  public let altText: Swift.String
  public let eventText: Swift.String
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
extension UIKit.UIColor {
  convenience public init(hexString: Swift.String)
}
extension PR1DigitalAdClassic.Environment : Swift.Equatable {}
extension PR1DigitalAdClassic.Environment : Swift.Hashable {}
extension PR1DigitalAdClassic.Environment : Swift.RawRepresentable {}
